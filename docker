#!/usr/bin/env bash

if [ ! -f "./.env" ]; then
  echo -e "${RED}.env${NC} file does not exist..."
  echo -e "Copying ${CYAN}.env.example${NC}..."
  cp -f ./.env.example ./.env
  [ -f "./.env" ] && echo -e "${GREEN}Copied successfully${NC}..."
fi

LARADOCK_PATH="$(pwd)"
export DOCKER_PATH="${LARADOCK_PATH##*/}"

NAME="$(grep -E DOCKER_NAME=.+ .env | cut -c13-)"
[[ -z $NAME ]] && NAME=$DOCKER_PATH

CYAN='\033[0;36m'
GREEN='\033[0;32m'
RED='\033[0;31m'
WHITE='\033[1;37m'
NC='\033[0m'

if [[ "$2" == bash ]]; then
  SERVICE="$1"
  shift 2

  docker-compose -p $NAME run --rm --no-deps $SERVICE /bin/bash $@
  exit
fi

if [[ ! -d "../node_modules" ]] || [[ "$1" == gulp-pre ]]; then
  echo "Preinstalation for gulp..."
  docker-compose -p $NAME run --rm --no-deps gulp-preinstall npm install
  [[ "$1" == gulp-pre ]] && exit
fi

if [[ "$1" == gulp ]]; then
  shift 1

  if [[ "$1" == client ]] || [[ "$1" == super ]] || [[ "$1" == school ]]; then
    docker-compose -p $NAME run --rm --no-deps gulp-console /bin/bash -c "su - tms -s /bin/bash -c 'gulp $@'"
  else
    # docker-compose -p tms run --rm --volumes-from tms_volumes_source_1 --volumes-from tms_gulp-console_1 -i -t tms_gulp-console /bin/bash -c "su - tms -s /bin/bash -c 'gulp client'"
    docker-compose -p $NAME run --rm --no-deps gulp-console /bin/bash -c "su - tms -s /bin/bash -c 'gulp client && gulp super && gulp school'"
  fi
  exit
fi

if [[ "$1" == up ]]; then
  # IS_UP="$(docker-compose -p $NAME ps | grep 'tms_')"
  # if [[ ! -z IS_UP ]]; then
  #   ./docker down
  # fi

  [[ "$(grep ENABLE_APACHE= .env | grep -E '=true|=1' | cut -c1-6)" == ENABLE ]] && APACHE=apache2
  [[ "$(grep ENABLE_PHP= .env | grep -E '=true|=1' | cut -c1-6)" == ENABLE ]] && PHP=php-fpm
  [[ "$(grep ENABLE_MYSQL= .env | grep -E '=true|=1' | cut -c1-6)" == ENABLE ]] && MYSQL=mysql
  docker-compose -p $NAME $@ $APACHE $PHP $MYSQL
else
  docker-compose -p $NAME $@
fi

